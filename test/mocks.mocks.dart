// Mocks generated by Mockito 5.2.0 from annotations
// in mobile_tech_task/test/mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mobile_tech_task/domain/services/bible_year_rss_service.dart'
    as _i3;
import 'package:mobile_tech_task/utilities/rss_utils.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:webfeed/webfeed.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRssFeed_0 extends _i1.Fake implements _i2.RssFeed {}

/// A class which mocks [BibleYearRSSService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBibleYearRSSService extends _i1.Mock
    implements _i3.BibleYearRSSService {
  MockBibleYearRSSService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> getRSSFeed() =>
      (super.noSuchMethod(Invocation.method(#getRSSFeed, []),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
}

/// A class which mocks [RSSUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockRSSUtils extends _i1.Mock implements _i5.RSSUtils {
  MockRSSUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RssFeed convertString(String? xmlString) =>
      (super.noSuchMethod(Invocation.method(#convertString, [xmlString]),
          returnValue: _FakeRssFeed_0()) as _i2.RssFeed);
}
